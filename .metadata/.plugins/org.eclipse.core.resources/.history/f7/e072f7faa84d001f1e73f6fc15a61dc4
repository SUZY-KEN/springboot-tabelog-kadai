package com.example.nagoyameshi.service;

import java.sql.Timestamp;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.example.nagoyameshi.entity.Restaurants;
import com.example.nagoyameshi.entity.Review;
import com.example.nagoyameshi.entity.Users;
import com.example.nagoyameshi.form.ReviewCreateForm;
import com.example.nagoyameshi.form.ReviewEditForm;
import com.example.nagoyameshi.repository.RestaurantRepository;
import com.example.nagoyameshi.repository.ReviewRepository;
import com.example.nagoyameshi.repository.UserRepository;

@Service
public class ReviewService {

	private final ReviewRepository reviewRepository;
	private final RestaurantRepository restaurantRepository;
	private final UserRepository userRepository;
	
	public ReviewService(ReviewRepository reviewRepository,RestaurantRepository restaurantRepository,UserRepository userRepository)
	{
		this.reviewRepository=reviewRepository;
		this.restaurantRepository=restaurantRepository;
		this.userRepository=userRepository;
	}
	
	
	
	public boolean hasUserAlreadyReviewed(Restaurants restaurants,Users users)
	{
		
		return reviewRepository.findByRestaurantsAndUsers(restaurants, users)!=null;
	}
	
//	レビュー登録
	@Transactional
	public void register(ReviewCreateForm reviewCreateForm,Restaurants restaurants,Users users)
	{
		Review review=new Review();
		review.setUsers(users);
		review.setRestaurants(restaurants);
		review.setEvalue(reviewCreateForm.getEvalue());
		review.setReviewComment(reviewCreateForm.getReviewComment());
		review.setCreatedAt(new Timestamp(System.currentTimeMillis()));
		
		reviewRepository.save(review);
		
	}
	
	//レビュー更新
	@Transactional
	public void update(ReviewEditForm reviewEditForm)
	{
		 Review review = reviewRepository.getReferenceById(reviewEditForm.getId());   
		 
		review.setEvalue(reviewEditForm.getEvalue());
		review.setReviewComment(reviewEditForm.getReviewComment());
		review.setCreatedAt(new Timestamp(System.currentTimeMillis()));
		
		reviewRepository.save(review);
	}
	
//	管理者名前検索
	
//	管理者店舗検索
	public void restaurantIndex(String restaurantKeyword)
	{
		
	}
}
