package com.example.nagoyameshi.service;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;
import java.util.UUID;

import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import com.example.nagoyameshi.entity.Restaurants;
import com.example.nagoyameshi.form.RestaurantCreateForm;
import com.example.nagoyameshi.repository.RestaurantRepository;

import jakarta.transaction.Transactional;

@Service
public class RestaurantService {
	private final RestaurantRepository restaurantRepository;
	
	
	public RestaurantService(RestaurantRepository restaurantRepository)
	{
		this.restaurantRepository=restaurantRepository;
	}
	

	
	
	//店舗登録
	@Transactional
	public void register(RestaurantCreateForm restaurantCreateForm)
	{
		Restaurants restaurant=new Restaurants();
		MultipartFile imageFile=restaurantCreateForm.getImageFile();
		
		if(!imageFile.isEmpty())
		{
			String imageName=imageFile.getOriginalFilename();
			String hashedFileName=generateNewFile(imageName);
			Path filePath=Paths.get("src/main/resources/satic/storage/"+hashedFileName);
			copyImageFile(imageFile, filePath);
			restaurant.setImage(hashedFileName);
			
		}
		
		restaurant.setName(restaurantCreateForm.getName());
	}
	
	
	//ファイル名の生成
	public String generateNewFile(String fileName)
	{
		String[] fileNames=fileName.split("\\.");
		for(int i=0;i<fileNames.length-1;i++)
		{
			fileNames[i]=UUID.randomUUID().toString();
		}
		String hashedFileName=String.join(".", fileNames);
		
		return hashedFileName;
	}
	
	//画像ファイルのコピー
	public void copyImageFile(MultipartFile imageFile,Path filePath)
	{
		try {
			Files.copy(imageFile.getInputStream(),filePath);
		}
		catch(IOException e){
			e.printStackTrace();
		}
	}
	
	
	//店舗名が重複してないか判定
		public boolean hasSameRestaurantName(RestaurantCreateForm restaurantCreateForm)
		{
			List<Restaurants>list=restaurantRepository.findAll();
			
			for(Restaurants restaurant:list)
			{
				if(restaurantCreateForm.getName().equals(restaurant.getName()))
				{
					return true;
				}
			}
			return false;
		}
	
}
